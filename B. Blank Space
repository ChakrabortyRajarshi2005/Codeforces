B. Blank Space
time limit per test1 second
memory limit per test256 megabytes
You are given a binary array a
 of n
 elements, a binary array is an array consisting only of 0
s and 1
s.

A blank space is a segment of consecutive elements consisting of only 0
s.

Your task is to find the length of the longest blank space.

Input
The first line contains a single integer t
 (1≤t≤1000
) — the number of test cases.

The first line of each test case contains a single integer n
 (1≤n≤100
) — the length of the array.

The second line of each test case contains n
 space-separated integers ai
 (0≤ai≤1
) — the elements of the array.

Output
For each test case, output a single integer — the length of the longest blank space.

Example
InputCopy
5
5
1 0 0 1 0
4
0 1 1 1
1
0
3
1 1 1
9
1 0 0 0 1 0 0 0 1
OutputCopy
2
1
1
0
3


def find_longest_blank_space(test_cases):
    results = []
    for case in test_cases:
        n, arr = case
        max_blank = 0
        current_blank = 0
        for num in arr:
            if num == 0:
                current_blank += 1
                max_blank = max(max_blank, current_blank)
            else:
                current_blank = 0
        results.append(max_blank)
    return results

# Input handling
t = int(input())
test_cases = []
for _ in range(t):
    n = int(input())
    arr = list(map(int, input().split()))
    test_cases.append((n, arr))

# Solve and output results
results = find_longest_blank_space(test_cases)
for res in results:
    print(res)
